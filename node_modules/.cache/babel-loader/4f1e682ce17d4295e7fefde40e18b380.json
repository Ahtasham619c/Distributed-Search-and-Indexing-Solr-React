{"ast":null,"code":"var _jsxFileName = \"D:\\\\github-pathfinder\\\\src\\\\App.js\";\nimport React, { useState, Fragment } from \"react\";\nimport Navbar from \"./components/layout/Navbar.js\";\nimport \"./App.css\";\nimport Users from \"./components/users/Users.js\";\nimport User from \"./components/users/User.js\";\nimport Search from \"./components/users/Search.js\";\nimport Alert from \"./components/layout/Alert.js\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/pages/About.js\";\nimport GithubState from \"./context/github/GithubState\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); //Search Github Users\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`);\n    const net = await axios.get(`http://localhost:8984/solr/Netflix_data/select?q=release_year%3A2000`);\n    console.log(net.data.docs);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //Get single GitHub user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  }; // Get User's repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=100&sort=created:asc&client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const clearUsers = () => {\n    setUsers([]);\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      alert,\n      msg\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(GithubState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: users.length > 0,\n      setAlert: showAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["D:/github-pathfinder/src/App.js"],"names":["React","useState","Fragment","Navbar","Users","User","Search","Alert","axios","BrowserRouter","Router","Switch","Route","About","GithubState","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","searchUsers","text","res","get","process","env","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET","net","console","log","data","docs","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport Navbar from \"./components/layout/Navbar.js\";\nimport \"./App.css\";\nimport Users from \"./components/users/Users.js\";\nimport User from \"./components/users/User.js\";\nimport Search from \"./components/users/Search.js\";\nimport Alert from \"./components/layout/Alert.js\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/pages/About.js\";\nimport GithubState from \"./context/github/GithubState\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  //Search Github Users\n const searchUsers = async (text) => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`\n    );\n    const net = await axios.get(`http://localhost:8984/solr/Netflix_data/select?q=release_year%3A2000`);\n    console.log(net.data.docs);\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n  //Get single GitHub user\n  const getUser = async (username) => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`\n    );\n    setUser(res.data);\n    setLoading(false);\n  };\n  // Get User's repos\n  const getUserRepos = async (username) => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=100&sort=created:asc&client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`\n    );\n    setRepos(res.data);\n    setLoading(false);\n  };\n  const clearUsers = () => {\n    setUsers([]);\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({ alert, msg });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  };\n\n  return (\n    <GithubState>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <Fragment>\n                    <Search\n                      searchUsers={searchUsers}\n                      clearUsers={clearUsers}\n                      showClear={users.length > 0}\n                      setAlert={showAlert}\n                    />\n                    <Users loading={loading} users={users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path=\"/about\" component={About} />\n              <Route\n                exact\n                path=\"/user/:login\"\n                render={(props) => (\n                  <User\n                    {...props}\n                    getUser={getUser}\n                    getUserRepos={getUserRepos}\n                    user={user}\n                    repos={repos}\n                    loading={loading}\n                  />\n                )}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}